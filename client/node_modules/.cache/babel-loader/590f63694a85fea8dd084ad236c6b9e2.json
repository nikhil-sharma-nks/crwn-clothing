{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nksni\\\\OneDrive\\\\Desktop\\\\Web Development\\\\React - udemy\\\\Project\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {// const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    // collectionRef.get().then((snapShot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapShot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    //   }\n    // );\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/nksni/OneDrive/Desktop/Web Development/React - udemy/Project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","path","loading","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,0BAA0B,GAAGF,WAAW,CAACH,cAAD,CAA9C;MAAMK,0B;;AAEN,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAGD,KAAD,iBACN,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEE,OAA3C;AAAA,aAAwDF;AAAxD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGD,KAAD,iBACN,QAAC,0BAAD;AAA4B,UAAA,SAAS,EAAEE,OAAvC;AAAA,aAAoDF;AAApD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AArCoC;;AAwCvC,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,iBAAiB,EAAGc,cAAD,IACjBD,QAAQ,CAACb,iBAAiB,CAACc,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCR,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport \"./shop.styles.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    // const { updateCollections } = this.props;\r\n    // const collectionRef = firestore.collection(\"collections\");\r\n    // collectionRef.get().then((snapShot) => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading: false });\r\n    // });\r\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n    //   async (snapShot) => {\r\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n    //     updateCollections(collectionsMap);\r\n    //     this.setState({ loading: false });\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionsPageWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}