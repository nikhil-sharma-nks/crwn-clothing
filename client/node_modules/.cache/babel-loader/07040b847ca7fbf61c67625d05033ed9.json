{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionsTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"saga\");\n}\nconst collectionRef = firestore.collection(\"collections\");\ncollectionRef.get().then(snapshot => {\n  const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  dispatch(fetchCollectionsSuccess(collectionsMap));\n}).catch(error => dispatch(fetchCollectionsFailure(error.message)));\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/nksni/OneDrive/Desktop/Web Development/React - udemy/Project/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionsTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AACD;AAED,MAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,aAAa,CACVG,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,QAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,EAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,CALH,EAMGI,KANH,CAMUC,KAAD,IAAWH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN5B;AAQA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbC,gBAAgB,CAACmB,uBADJ,EAEblB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\r\n\r\nimport ShopActionsTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log(\"saga\");\r\n}\r\n\r\nconst collectionRef = firestore.collection(\"collections\");\r\n\r\ncollectionRef\r\n  .get()\r\n  .then((snapshot) => {\r\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  })\r\n  .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionsTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}