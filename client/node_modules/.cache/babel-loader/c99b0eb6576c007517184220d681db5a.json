{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nksni\\\\OneDrive\\\\Desktop\\\\Web Development\\\\React - udemy\\\\Project\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport \"./shop.styles.scss\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync(); // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    // collectionRef.get().then((snapShot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapShot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    //   }\n    // );\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/nksni/OneDrive/Desktop/Web Development/React - udemy/Project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverviewContainer","CollectionPageContainer","connect","fetchCollectionsStartAsync","createStructuredSelector","WithSpinner","ShopPage","Component","componentDidMount","props","render","match","path","mapStateToProps","isCollectionsLoaded","selectIsCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAiC,KAAKM,KAA5C;AACAN,IAAAA,0BAA0B,GAFR,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAEZ;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEX;AAFb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAnCoC;;AAsCvC,MAAMY,eAAe,GAAGT,wBAAwB,CAAC;AAC/CU,EAAAA,mBAAmB,EAAEC;AAD0B,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport \"./shop.styles.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\r\nimport CollectionPageContainer from \"../collection/collection.container\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();\r\n    // const { updateCollections } = this.props;\r\n    // const collectionRef = firestore.collection(\"collections\");\r\n    // collectionRef.get().then((snapShot) => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading: false });\r\n    // });\r\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n    //   async (snapShot) => {\r\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\r\n    //     updateCollections(collectionsMap);\r\n    //     this.setState({ loading: false });\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPageContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionsLoaded: selectIsCollectionsLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}