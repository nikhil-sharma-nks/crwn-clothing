{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nksni\\\\OneDrive\\\\Desktop\\\\Web Development\\\\React - udemy\\\\Project\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./sign-in.styles.scss\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password); // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: \"\", password: \"\" });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials(...userCredentials, {\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        handleChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: handleChange,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          value: \"Submit Form\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"kf4nhNg5gPxSQV1k+kFE7oH5sBk=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/nksni/OneDrive/Desktop/Web Development/React - udemy/Project/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","Component","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./sign-in.styles.scss\";\r\n\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    emailSignInStart(email, password);\r\n\r\n    // try {\r\n    //   await auth.signInWithEmailAndPassword(email, password);\r\n    //   this.setState({ email: \"\", password: \"\" });\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials(...userCredentials, { [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>I already have an account</h2>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={this.state.email}\r\n          handleChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.password}\r\n          handleChange={handleChange}\r\n          label=\"Password\"\r\n        />\r\n\r\n        <div className=\"buttons\">\r\n          <CustomButton type=\"submit\" value=\"Submit Form\">\r\n            Sign In\r\n          </CustomButton>\r\n          <CustomButton\r\n            type=\"button\"\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign In With Google\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}